//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication4
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CinemaEntities : DbContext
    {
        public CinemaEntities()
            : base("name=CinemaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<bilet> bilet { get; set; }
        public virtual DbSet<film> film { get; set; }
        public virtual DbSet<klient> klient { get; set; }
        public virtual DbSet<miejsce> miejsce { get; set; }
        public virtual DbSet<rezerwacja> rezerwacja { get; set; }
        public virtual DbSet<sala> sala { get; set; }
        public virtual DbSet<seans> seans { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int deleteBook(Nullable<int> resId)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("resId", resId) :
                new ObjectParameter("resId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteBook", resIdParameter);
        }
    
        public virtual int insertReservation(Nullable<int> resId, Nullable<int> seaId, Nullable<int> plaId)
        {
            var resIdParameter = resId.HasValue ?
                new ObjectParameter("resId", resId) :
                new ObjectParameter("resId", typeof(int));
    
            var seaIdParameter = seaId.HasValue ?
                new ObjectParameter("seaId", seaId) :
                new ObjectParameter("seaId", typeof(int));
    
            var plaIdParameter = plaId.HasValue ?
                new ObjectParameter("plaId", plaId) :
                new ObjectParameter("plaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertReservation", resIdParameter, seaIdParameter, plaIdParameter);
        }
    }
}
